# Generated by Django 2.0.9 on 2019-04-11 07:10

from django.db import migrations
import os
import csv


def napolni_bazo(apps, schema_editor):
    Igralec = apps.get_model('miami', 'Igralec')
    Ekipa = apps.get_model('miami', 'Ekipa')
    Tekma = apps.get_model('miami', 'Tekma')
    Statistika = apps.get_model('miami', 'Statistika')
    IGRALCI_CSV = os.path.join(os.path.dirname(__file__), '0002_podatki', 'igralci.csv')
    EKIPE_CSV = os.path.join(os.path.dirname(__file__), '0002_podatki', 'ekipe.csv')
    TEKME_CSV = os.path.join(os.path.dirname(__file__), '0002_podatki', 'tekme.csv')
    STATISTIKA_CSV = os.path.join(os.path.dirname(__file__), '0002_podatki', 'statistika.csv')

    with open(IGRALCI_CSV, encoding = 'utf-8') as f:
        for podatki in csv.DictReader(f):
            Igralec.objects.create(
                stevilka=int(podatki.pop('No.')),
                ime=podatki.pop('Player'),
                pozicija=podatki.pop('Pos'),
                visina=podatki.pop('Ht'),
                teza=int(podatki.pop('Wt')),
                leto_rojstva=int(podatki.pop('Year')),
                slika=str(podatki.pop('Picture')),
            )
            assert podatki == {}

    print("Procesiram ekipe")
    with open(EKIPE_CSV, encoding ='utf-8') as f:
        for podatki in csv.DictReader(f):
            Ekipa.objects.create(
                        kratica=podatki.pop('Tag'),
                        trener=podatki.pop('Trainer'),
                        ime=podatki.pop('Franchise'),
            )

    print("Procesiram tekme")
    with open(TEKME_CSV, encoding='utf-8') as f:
        for podatki in csv.DictReader(f):
            nasprotnik = Ekipa.objects.get(ime=podatki.pop('Opponent'))
            Tekma.objects.create(
                datum=podatki.pop('Date'),
                nasprotnik=nasprotnik,
                tocke_ekipa=podatki.pop('PointsTeam'),
                tocke_nasprotne=podatki.pop('PointsOpponent'),
                )
    
    with open(STATISTIKA_CSV, encoding='utf-8') as f:
        for podatki in csv.DictReader(f):
            igralec = Igralec.objects.get(stevilka=podatki.pop('JerseyNo'))
            tekma = Tekma.objects.get(datum=podatki.pop('Date'))
            Statistika.objects.create(
                igralec=igralec,
                tekma=tekma,
                skoki=podatki.pop('TRB'),
                podaje=podatki.pop('AST'),
                ukradene=podatki.pop('STL'),
                tocke=podatki.pop('PTS'),
            )




class Migration(migrations.Migration):

    dependencies = [
        ('miami', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(napolni_bazo),
    ]
